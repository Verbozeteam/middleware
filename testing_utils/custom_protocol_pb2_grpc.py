# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import testing_utils.custom_protocol_pb2 as custom__protocol__pb2


class ArduinoStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetPinState = channel.unary_unary(
        '/shammam.Arduino/GetPinState',
        request_serializer=custom__protocol__pb2.Pin.SerializeToString,
        response_deserializer=custom__protocol__pb2.State.FromString,
        )
    self.SetPinState = channel.unary_unary(
        '/shammam.Arduino/SetPinState',
        request_serializer=custom__protocol__pb2.PinAndState.SerializeToString,
        response_deserializer=custom__protocol__pb2.State.FromString,
        )
    self.ResetPins = channel.unary_unary(
        '/shammam.Arduino/ResetPins',
        request_serializer=custom__protocol__pb2.Empty.SerializeToString,
        response_deserializer=custom__protocol__pb2.Empty.FromString,
        )
    self.SetTemperatureSensor = channel.unary_unary(
        '/shammam.Arduino/SetTemperatureSensor',
        request_serializer=custom__protocol__pb2.Temperature.SerializeToString,
        response_deserializer=custom__protocol__pb2.Empty.FromString,
        )


class ArduinoServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetPinState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetPinState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResetPins(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetTemperatureSensor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ArduinoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetPinState': grpc.unary_unary_rpc_method_handler(
          servicer.GetPinState,
          request_deserializer=custom__protocol__pb2.Pin.FromString,
          response_serializer=custom__protocol__pb2.State.SerializeToString,
      ),
      'SetPinState': grpc.unary_unary_rpc_method_handler(
          servicer.SetPinState,
          request_deserializer=custom__protocol__pb2.PinAndState.FromString,
          response_serializer=custom__protocol__pb2.State.SerializeToString,
      ),
      'ResetPins': grpc.unary_unary_rpc_method_handler(
          servicer.ResetPins,
          request_deserializer=custom__protocol__pb2.Empty.FromString,
          response_serializer=custom__protocol__pb2.Empty.SerializeToString,
      ),
      'SetTemperatureSensor': grpc.unary_unary_rpc_method_handler(
          servicer.SetTemperatureSensor,
          request_deserializer=custom__protocol__pb2.Temperature.FromString,
          response_serializer=custom__protocol__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'shammam.Arduino', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
